{"version":3,"sources":["webpack://feelo/./node_modules/@fluentui/react-icons-mdl2/lib/components/ChevronUpIcon.js","webpack://feelo/./src/components/Accordion.js","webpack://feelo/./src/pages/faq.js"],"names":["svg","_a","classes","xmlns","viewBox","className","d","displayName","Accordion","question","children","useState","open","setOpen","onClick","Group","faqs","title","map","answer","Faq","data","getCatFaqs","cat","group","find","i","fieldValue","nodes","Layout","Download"],"mappings":"wKAeA,GAboB,E,QAAA,GAAc,CAChCA,IAAK,SAAaC,GAChB,IAAIC,EAAUD,EAAGC,QACjB,OAAO,gBAAoB,MAAO,CAChCC,MAAO,6BACPC,QAAS,gBACTC,UAAWH,EAAQF,KAClB,gBAAoB,OAAQ,CAC7BM,EAAG,kEAGPC,YAAa,kB,UCVA,SAASC,EAAT,GAA4C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC5C,GAAwBC,eAAS,GAA1BC,EAAP,KAAaC,EAAb,KACA,OACE,qBAASR,UAAS,mBAAoBO,GAAQ,QAA9C,WACE,iBAAKP,UAAU,mBAAmBS,QAAS,kBAAMD,GAASD,IAA1D,WACE,gBAAKP,UAAU,MAAf,SACGI,KAEH,gBAAKJ,UAAU,0BAAf,UACE,SAAC,EAAD,UAGJ,gBAAKA,UAAS,mBACZO,GAAQ,UADV,SAGGF,O,cCbT,SAASK,EAAT,GAAiC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACrB,OAAQD,GAEJ,gCACE,wBAAKC,KACL,eAAIZ,UAAU,gBAAd,SACGW,EAAKE,KAAI,gBAAGT,EAAH,EAAGA,SAAUU,EAAb,EAAaA,OAAb,OACR,SAACX,EAAD,CAEEC,SAAUA,EAFZ,SAIGU,GAHIV,WAQX,KAKO,SAASW,EAAT,GAAkC,IAAXJ,EAAU,EAAlBK,KAAQL,KACpC,SAASM,EAAWC,GAAM,IAAD,EACvB,iBAAOP,EAAKQ,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEC,aAAeJ,YAA/C,aAAO,EAA8CK,MAGvD,OACE,UAACC,EAAA,EAAD,YACE,iBAAKxB,UAAU,YAAf,WACE,mBAAQA,UAAU,yCAAlB,UACE,gBAAKA,UAAU,SAAf,UACE,eAAIA,UAAU,0BAAd,oCAGJ,gBAAKA,UAAU,6BAAf,UAEE,iBAAKA,UAAU,kBAAf,WACE,SAACU,EAAD,CAAOE,MAAM,QAAQD,KAAMM,EAAW,YACtC,SAACP,EAAD,CAAOE,MAAM,UAAUD,KAAMM,EAAW,cACxC,SAACP,EAAD,CAAOE,MAAM,WAAWD,KAAMM,EAAW,qBAI/C,SAACQ,EAAA,GAAD","file":"component---src-pages-faq-js-b2f77db200d75c76a5c9.js","sourcesContent":["import * as React from 'react';\nimport createSvgIcon from '../utils/createSvgIcon';\nvar ChevronUpIcon = createSvgIcon({\n  svg: function svg(_a) {\n    var classes = _a.classes;\n    return React.createElement(\"svg\", {\n      xmlns: \"http://www.w3.org/2000/svg\",\n      viewBox: \"0 0 2048 2048\",\n      className: classes.svg\n    }, React.createElement(\"path\", {\n      d: \"M1955 1533l-931-930-931 930-90-90L1024 421l1021 1022-90 90z\"\n    }));\n  },\n  displayName: 'ChevronUpIcon'\n});\nexport default ChevronUpIcon;","import { useState } from 'react';\nimport { ChevronDownIcon, ChevronUpIcon } from '@fluentui/react-icons-mdl2';\n\nexport default function Accordion({ question, children }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <article className={`accordion my-2 ${open && 'open'}`}>\n      <div className=\"accordion-header\" onClick={() => setOpen(!open)}>\n        <div className=\"col\">\n          {question}\n        </div>\n        <div className=\"col-auto accordion-icon\">\n          <ChevronUpIcon />\n        </div>\n      </div>\n      <div className={`accordion-body ${\n        open || 'd-none'}`}\n      >\n        {children}\n      </div>\n    </article>\n  );\n}\n","import { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Accordion from '../components/Accordion';\nimport Download from '../components/Download';\n\nfunction Group({ faqs, title }) {\n  return (faqs\n    ? (\n      <section>\n        <h2>{title}</h2>\n        <ul className=\"list-unstyled\">\n          {faqs.map(({ question, answer }) => (\n            <Accordion\n              key={question}\n              question={question}\n            >\n              {answer}\n            </Accordion>\n          ))}\n        </ul>\n      </section>\n    ) : null\n\n  );\n}\n\nexport default function Faq({ data: { faqs } }) {\n  function getCatFaqs(cat) {\n    return faqs.group.find((i) => i.fieldValue === cat)?.nodes;\n  }\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <header className=\"row page-header justify-content-center\">\n          <div className=\"col-12\">\n            <h1 className=\"text-center handwirtten\">Domande frequenti</h1>\n          </div>\n        </header>\n        <div className=\"row justify-content-center\">\n\n          <div className=\"col-12 col-md-8\">\n            <Group title=\"Feelo\" faqs={getCatFaqs('feelo')} />\n            <Group title=\"Account\" faqs={getCatFaqs('account')} />\n            <Group title=\"AttivitÃ \" faqs={getCatFaqs('feeler')} />\n          </div>\n        </div>\n      </div>\n      <Download />\n    </Layout>\n  );\n}\n\nexport const query = graphql`{\n  faqs: allSheetsFaq {\n    group(field: category) {\n      nodes {\n        answer\n        category\n        question\n      }\n      fieldValue\n    }\n  }\n}`;\n"],"sourceRoot":""}