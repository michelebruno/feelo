{"version":3,"sources":["webpack://feelo/./src/components/Accordion.js","webpack://feelo/./src/pages/faq.js"],"names":["Accordion","question","children","useState","open","setOpen","className","onClick","Group","faqs","title","map","answer","Faq","data","getCatFaqs","cat","group","find","i","fieldValue","nodes","Layout"],"mappings":"kLAEe,SAASA,EAAT,GAA4C,IAAvBC,EAAsB,EAAtBA,SAAUC,EAAY,EAAZA,SAC5C,GAAwBC,eAAS,GAA1BC,EAAP,KAAaC,EAAb,KACA,OACE,qBAASC,UAAU,YAAnB,WACE,iBAAKA,UAAU,mBAAmBC,QAAS,kBAAMF,GAASD,IAA1D,WACE,gBAAKE,UAAU,MAAf,SACGL,KAEH,gBAAKK,UAAU,WAAf,SACGF,EAAO,IAAM,UAGlB,gBAAKE,UAAS,mBACZF,GAAQ,UADV,SAGGF,OCbT,SAASM,EAAT,GAAiC,IAAhBC,EAAe,EAAfA,KAAMC,EAAS,EAATA,MACrB,OAAQD,GAEJ,gCACE,wBAAKC,KACL,eAAIJ,UAAU,gBAAd,SACGG,EAAKE,KAAI,gBAAGV,EAAH,EAAGA,SAAUW,EAAb,EAAaA,OAAb,OACR,SAACZ,EAAD,CAEEC,SAAUA,EAFZ,SAIGW,GAHIX,WAQX,KAKO,SAASY,EAAT,GAAkC,IAAXJ,EAAU,EAAlBK,KAAQL,KACpC,SAASM,EAAWC,GAAM,IAAD,EACvB,iBAAOP,EAAKQ,MAAMC,MAAK,SAACC,GAAD,OAAOA,EAAEC,aAAeJ,YAA/C,aAAO,EAA8CK,MAGtCN,EAAW,YAE5B,OACE,SAACO,EAAA,EAAD,WACE,iBAAKhB,UAAU,YAAf,WACE,mBAAQA,UAAU,yCAAlB,UACE,gBAAKA,UAAU,SAAf,UACE,eAAIA,UAAU,cAAd,oCAGJ,gBAAKA,UAAU,6BAAf,UAEE,iBAAKA,UAAU,kBAAf,WACE,SAACE,EAAD,CAAOE,MAAM,UAAUD,KAAMM,EAAW,cACxC,SAACP,EAAD,CAAOE,MAAM,WAAWD,KAAMM,EAAW","file":"component---src-pages-faq-js-b00d068133de71c8b1b3.js","sourcesContent":["import { useState } from 'react';\n\nexport default function Accordion({ question, children }) {\n  const [open, setOpen] = useState(false);\n  return (\n    <article className=\"accordion\">\n      <div className=\"accordion-header\" onClick={() => setOpen(!open)}>\n        <div className=\"col\">\n          {question}\n        </div>\n        <div className=\"col-auto\">\n          {open ? 'C' : 'O'}\n        </div>\n      </div>\n      <div className={`accordion-body ${\n        open && 'd-none'}`}\n      >\n        {children}\n      </div>\n    </article>\n  );\n}\n","import { graphql } from 'gatsby';\nimport Layout from '../components/Layout';\nimport Accordion from '../components/Accordion';\n\nfunction Group({ faqs, title }) {\n  return (faqs\n    ? (\n      <section>\n        <h2>{title}</h2>\n        <ul className=\"list-unstyled\">\n          {faqs.map(({ question, answer }) => (\n            <Accordion\n              key={question}\n              question={question}\n            >\n              {answer}\n            </Accordion>\n          ))}\n        </ul>\n      </section>\n    ) : null\n\n  );\n}\n\nexport default function Faq({ data: { faqs } }) {\n  function getCatFaqs(cat) {\n    return faqs.group.find((i) => i.fieldValue === cat)?.nodes;\n  }\n\n  const attivita = getCatFaqs('attività');\n\n  return (\n    <Layout>\n      <div className=\"container\">\n        <header className=\"row page-header justify-content-center\">\n          <div className=\"col-12\">\n            <h1 className=\"text-center\">Domande frequenti</h1>\n          </div>\n        </header>\n        <div className=\"row justify-content-center\">\n\n          <div className=\"col-12 col-md-8\">\n            <Group title=\"Account\" faqs={getCatFaqs('account')} />\n            <Group title=\"Attività\" faqs={getCatFaqs('feeler')} />\n          </div>\n        </div>\n      </div>\n    </Layout>\n  );\n}\n\nexport const query = graphql`{\n  faqs: allSheetsFaq {\n    group(field: category) {\n      nodes {\n        answer\n        category\n        question\n      }\n      fieldValue\n    }\n  }\n}`;\n"],"sourceRoot":""}